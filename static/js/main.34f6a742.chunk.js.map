{"version":3,"sources":["hook/useQuote.js","components/App.js","hook/useFetch.js","index.js"],"names":["colors","App","url","useState","data","loading","error","state","setstate","useEffect","fetch","then","resp","json","useFetch","quotesData","twitter","tumblr","post","setPost","quote","author","text","setText","color","setColor","getQuote","randomQuote","quotes","Math","floor","random","length","currentQuote","currentAuthor","encodeURIComponent","useQuote","document","body","style","backgroundColor","className","id","href","title","target","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMACIA,EAAS,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,OCuDWC,MAhEf,WAEE,MCJsB,SAACC,GAErB,MAA0BC,mBACtB,CACIC,KAAM,KACNC,SAAU,EACVC,MAAO,OAJf,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAZAC,qBAAU,WACNC,MAAMR,GACLS,MAAK,SAAAC,GAAI,OAAEA,EAAKC,UAChBF,MAAK,SAAAP,GAEFI,EAAS,CACLH,SAAQ,EACRC,MAAO,KACPF,cAGT,CAACF,IACGK,EDjBiBO,CAAS,+HAA3BT,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,KAEjB,EDOsB,SAACW,GACrB,MAAwBZ,mBAAS,CAAEa,QAAS,GAAIC,OAAQ,KAAxD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBhB,mBAAS,CAAEiB,MAAO,GAAIC,OAAQ,KAAtD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BpB,mBAASH,EAAO,IAA1C,mBAAOwB,EAAP,KAAcC,EAAd,KAyBA,MAAO,CAEHC,SAzBa,WAEb,IAAIC,EAAcZ,EAAWa,OACzBC,KAAKC,MAAMD,KAAKE,SAAWhB,EAAWa,OAAOI,SAE7CC,EAAeN,EAAYP,MAC3Bc,EAAgBP,EAAYN,OAE5BL,EAAU,8EACVmB,mBAAmB,IAAD,OAAKF,EAAL,aAAsBC,IAExCjB,EAAS,6FACTkB,mBAAmBD,GAAiB,YAAcC,mBAAmBF,GAAgB,uFAEzFd,EAAQ,CACJH,UACAC,WAEJM,EAAQ,CAAEH,MAAOO,EAAYP,MAAOC,OAAQM,EAAYN,SACxD,IAAIG,EAAQK,KAAKC,MAAMD,KAAKE,SAAW/B,EAAOgC,QAC9CP,EAASzB,EAAOwB,KAMhBN,OACAI,OACAE,SCxCgCY,CAAShC,GAAtCsB,EAAT,EAASA,SAASR,EAAlB,EAAkBA,KAAKI,EAAvB,EAAuBA,KAAKE,EAA5B,EAA4BA,MAmB5B,OAjBAf,qBAAU,WACHJ,GACJqB,MAIA,CAACtB,IAEHK,qBAAU,WAGT,OAFG4B,SAASC,KAAKC,MAAMC,gBAAkBhB,EACvCa,SAASC,KAAKC,MAAMf,MAAQA,EACvB,WACLa,SAASC,KAAKC,MAAMC,gBAAkB,QAEvC,CAAChB,IAIF,sBAAKiB,UAAU,MAAf,UACA,8DACA,sBAAKC,GAAG,UAAR,UACE,sBAAKA,GAAG,YAAR,UACE,sBAAKD,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,eAAqC,sBAAMC,GAAG,OAAT,SAAiBpB,EAAKF,WAE7D,sBAAKqB,UAAU,eAAf,eAAgC,sBAAMC,GAAG,SAAT,SAAoBpB,EAAKD,YACzD,sBAAKoB,UAAU,UAAf,UACE,mBACEA,UAAU,SACVC,GAAG,cACHC,KAAMzB,EAAKF,QACX4B,MAAM,oBACNC,OAAO,SALT,SAOE,mBAAGJ,UAAU,oBAEf,mBACEA,UAAU,SACVC,GAAG,eACFC,KAAMzB,EAAKD,OACZ2B,MAAM,6BACNC,OAAO,SALT,SAOE,mBAAGJ,UAAU,mBAEf,wBAAQA,UAAU,SAASC,GAAG,YAAYI,QAAS,WAC3CzC,GAASqB,KADjB,8BAMJ,sBAAKe,UAAU,SAAf,gBAA2B,mBAAGE,KAAK,4BAAR,8B,MExDjCI,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFZ,SAASa,eAAe,W","file":"static/js/main.34f6a742.chunk.js","sourcesContent":["import { useState } from 'react'\r\nlet colors = [\r\n    '#16a085',\r\n    '#27ae60',\r\n    '#2c3e50',\r\n    '#f39c12',\r\n    '#e74c3c',\r\n    '#9b59b6',\r\n    '#FB6964',\r\n    '#342224',\r\n    '#472E32',\r\n    '#BDBB99',\r\n    '#77B1A9',\r\n    '#73A857'\r\n];\r\nexport const useQuote = (quotesData) => {\r\n    const [post, setPost] = useState({ twitter: '', tumblr: '' })\r\n    const [text, setText] = useState({ quote: '', author: '' })\r\n    const [color, setColor] = useState(colors[0])\r\n\r\n    const getQuote = () => {\r\n\r\n        let randomQuote = quotesData.quotes[\r\n            Math.floor(Math.random() * quotesData.quotes.length)\r\n        ];\r\n        let currentQuote = randomQuote.quote;\r\n        let currentAuthor = randomQuote.author;\r\n\r\n        let twitter = 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\r\n            encodeURIComponent(`\"${currentQuote}\" ${currentAuthor}`)\r\n\r\n        let tumblr = 'https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=' +\r\n            encodeURIComponent(currentAuthor) + '&content=' + encodeURIComponent(currentQuote) + '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'\r\n\r\n        setPost({\r\n            twitter,\r\n            tumblr,\r\n        })\r\n        setText({ quote: randomQuote.quote, author: randomQuote.author })\r\n        let color = Math.floor(Math.random() * colors.length);\r\n        setColor(colors[color])\r\n    }\r\n\r\n    return {\r\n\r\n        getQuote,\r\n        post,\r\n        text,\r\n        color\r\n    }\r\n\r\n}\r\n","import React, { useEffect } from 'react'\nimport { useFetch } from '../hook/useFetch'\nimport { useQuote } from '../hook/useQuote';\n\nfunction App() {\n  \n  const { loading, data } = useFetch(`https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/`)\n\n  const {  getQuote,post,text,color} =  useQuote(data) \n  \n  useEffect(() => {\n    if (!loading) {\n     getQuote() \n    \n    }\n\n  }, [data]) \n\n   useEffect(() => {\n       document.body.style.backgroundColor = color;\n      document.body.style.color = color;\n    return () => {\n      document.body.style.backgroundColor = null;\n    } \n  }, [color]) \n\n\n  return (\n    <div className=\"app\"> \n    <h1>Maquina de frases aleatorias</h1>\n    <div id=\"wrapper\">\n      <div id=\"quote-box\">\n        <div className=\"quote-text\">\n          <i className=\"fa fa-quote-left\"> </i><span id=\"text\">{text.quote }</span>\n        </div>\n        <div className=\"quote-author\">- <span id=\"author\">{ text.author }</span></div>\n        <div className=\"buttons\">\n          <a\n            className=\"button\"\n            id=\"tweet-quote\"\n            href={post.twitter}\n            title=\"Tweet this quote!\"\n            target=\"_blank\"\n          >\n            <i className=\"fa fa-twitter\"></i>\n          </a>\n          <a\n            className=\"button\"\n            id=\"tumblr-quote\"\n             href={post.tumblr}\n            title=\"Post this quote on tumblr!\"\n            target=\"_blank\"\n          >\n            <i className=\"fa fa-tumblr\"></i>\n          </a>\n          <button className=\"button\" id=\"new-quote\" onClick={() => {\n             if (!loading) getQuote() \n          }\n          }>Nueva Cita</button>\n        </div>\n      </div>\n      <div className=\"footer\">by <a href=\"https://codepen.io/hezag/\">Yadier</a></div>\n\n    </div>\n    </div>\n  )\n}\n\nexport default App\n","import {useState, useEffect} from 'react'\n\nexport const useFetch = (url) => {\n   \n    const [state, setstate] = useState(\n        {\n            data: null,\n            loading : true,\n            error: null\n        }\n    )\n    useEffect(() => {\n        fetch(url)\n        .then(resp=>resp.json())\n        .then(data=>{\n            \n            setstate({\n                loading:false,\n                error: null,\n                data\n            })\n        })\n    }, [url])\n    return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App/>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}